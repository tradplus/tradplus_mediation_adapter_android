apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion '28.0.3'


    defaultConfig {
        useLibrary 'org.apache.http.legacy'
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "${mintegralx_cnads_v}"

        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        release {
            buildConfigField "String", "NETWORK_VERSION", "\"${mtg_cn_version}\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            buildConfigField "String", "NETWORK_VERSION", "\"${mtg_cn_version}\""
        }
    }

}
ext {
    PROJ_GROUP = "com.tradplus.ads.mintegral"
    PROJ_DESCRIPTION = "tradplus-mintegralx_cn"
    PROJ_ARTIFACTID = "tradplus-mintegralx_cn"//包名
    PROJ_VERSION = mintegralx_cnads_v
    PROJ_REPO = "tradplus-mintegralx_cn"
    PROJ_NAME = "tradplus-mintegralx_cn"
    PROJ_VCSURL = "https://github.com/tradplus.keystore/sdk.git"
    PROJ_WEBSITEURL = "https://github.com/tradplus.keystore/sdk"

    DEVELOPER_ID = ""
    DEVELOPER_NAME = "you accout name"
    DEVELOPER_EMAIL = ""
}
repositories {

     if ((useMaven as int == 0 )) {
        if (isDev as int == 0) {
            println("引用 'aar' ")
            flatDir {
                dirs project(':flute-sdk').file('aar')
            }
        }
    }

    maven {
        url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_china"
    }
}

android.libraryVariants.all {
    variant ->
        variant.outputs.all {
            outputFileName = "mintegralx_cn_ads" + "_${mintegralx_cnads_v}." + 'aar'
        }
        variant.getAssembleProvider().configure() {
            it.doLast {
                variant.outputs.all { output ->
                    def outputPath = [project.rootDir.absolutePath, "build", "outputs", "mintegral_cn"].join(File.separator)
                    copy {
                        from output.outputFile
                        into outputPath
                    }
                }
            }
        }
}

task moveNetworkaar(type: Copy) {

    println "----------> ARR copy start <-----------"
    def buildPath = project.files("mintegralx_cn_ads").from("network_libs")
    //AAR所在的编译路径
    from buildPath
    //AAR所拷贝的目录
    def outputPath = [project.rootDir.absolutePath, "build", "outputs", "mintegral_cn"].join(File.separator)
    println "outputPath = " + outputPath
    into outputPath

    println "----------> ARR copy succeeded <-----------"
}

dependencies {
    if(useMaven as int ==1){
        compileOnly project(':flute-sdk')
    }else {
         
        if(isDev as int == 1){
              
            compileOnly project(':flute-sdk')
        }else {
            println("引用tradplus-sdk-android.aar")
            compileOnly (name: 'tradplus-sdk-android', ext: 'aar')
        }
    }
//    compileOnly 'androidx.legacy:legacy-support-v4:1.0.0'
    // Please add the code below to your project's build.gradle

    compileOnly "com.mbridge.msdk.china:reward:${mtg_cn_version}"
    compileOnly "com.mbridge.msdk.china:mbsplash:${mtg_cn_version}"
    compileOnly "com.mbridge.msdk.china:mbbanner:${mtg_cn_version}"
    compileOnly "com.mbridge.msdk.china:mbnative:${mtg_cn_version}"
    compileOnly "com.mbridge.msdk.china:mbnativeadvanced:${mtg_cn_version}"
    compileOnly "com.mbridge.msdk.china:newinterstitial:${mtg_cn_version}"
    compileOnly "com.mbridge.msdk.china:mbbid:${mtg_cn_version}"
}
//开源gradle
apply from: '../bintray.gradle'